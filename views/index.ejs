<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salles Libres</title>
    <link href="/salles/public/style.css" rel="stylesheet" />
    <script>
        let currentIndex = 0;
        document.addEventListener('keydown', function (event) {
            const sequence = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'KeyB', 'KeyQ'];
            console.log(event.code);
            console.log(sequence[currentIndex]);
            console.log(currentIndex);
            console.log(event.code == sequence[currentIndex]);

            if (event.code == sequence[currentIndex]) {
                console.log('correct');
                currentIndex++;
                if (currentIndex === sequence.length) {
                window.location.href = '/salles/login';
                }
            } else {
                currentIndex = 0;
            }

        });
        document.addEventListener('DOMContentLoaded', function () {
            const menuButton = document.getElementById('menu-button');
            const menu = document.getElementById('menu');
            const mobileMenuButton = document.querySelector('.lg\\:hidden button');
            const mobileMenu = document.querySelector('.lg\\:hidden[role="dialog"]');
            const closeButton = mobileMenu.querySelector('button');

            menuButton.addEventListener('click', function () {
                menu.classList.toggle('hidden');
            });

            document.addEventListener('click', function (event) {
                if (!menu.contains(event.target) && !menuButton.contains(event.target)) {
                    menu.classList.add('hidden');
                }
            });

            mobileMenuButton.addEventListener('click', function () {
                mobileMenu.classList.toggle('hidden');
            });

            closeButton.addEventListener('click', function () {
                mobileMenu.classList.add('hidden');
            });

            const dateInput = document.getElementById('date');
            const timeInput = document.getElementById('time');
            const now = new Date();
            const formattedDate = now.toISOString().split('T')[0];
            const formattedTime = now.toTimeString().split(' ')[0].slice(0, 5);
            dateInput.value = formattedDate;
            timeInput.value = formattedTime;
            const form = document.getElementById('dateTimeForm');
            form.addEventListener('submit', function (event) {
                const heureRegex = /([01]?[0-9]|2[0-3]):[0-5][0-9]/;
                const dateRegex = /\d{4}-\d{2}-\d{2}/;

                event.preventDefault();
                const date = document.getElementById('date').value;
                const time = document.getElementById('time').value;
                window.location.href = `/salles/univ/<%= univ %>?date=${date}&time=${time}`;
            });
        });
    </script>
</head>

<body class="h-full bg-gray-100">
    <div class="min-h-full">
        <header class="bg-white shadow">
            <nav class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8" aria-label="Global">
                <div class="flex lg:flex-1">
                    <h1 class="text-3xl font-bold tracking-tight text-gray-900">
                        <%= univ == "ceri" ? "CERI - AVIGNON" : univ.toUpperCase() %>
                    </h1>
                </div>
                <div class="flex lg:hidden">
                    <button type="button"
                        class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700">
                        <span class="sr-only">Open main menu</span>
                        <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                            aria-hidden="true" data-slot="icon">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                        </svg>
                    </button>
                </div>
                <div class="hidden lg:flex lg:gap-x-12">
                    <a href="/salles/univ/ceri" class="text-sm/6 font-semibold text-gray-900 hover:text-indigo-600">Ceri</a>
                    <a href="/salles/univ/agroscience" class="text-sm/6 font-semibold text-gray-900 hover:text-indigo-600">Agroscience</a>
                    <a href="/salles/univ/avignon-centre" class="text-sm/6 font-semibold text-gray-900 hover:text-indigo-600">Avignon-Centre</a>
                </div>
            </nav>
            <!-- Mobile menu, show/hide based on menu open state. -->
            <div class="lg:hidden hidden" role="dialog" aria-modal="true">
                <!-- Background backdrop, show/hide based on slide-over state. -->
                <div class="fixed inset-0 z-10"></div>
                <div
                    class="fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
                    <div class="flex items-center justify-between">
                        <h1 class="text-3xl font-bold tracking-tight text-gray-900">
                            <%= univ.toUpperCase() %>
                        </h1>
                        <button type="button" class="-m-2.5 rounded-md p-2.5 text-gray-700">
                            <span class="sr-only">Close menu</span>
                            <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                aria-hidden="true" data-slot="icon">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    <div class="mt-6 flow-root">
                        <div class="-my-6 divide-y divide-gray-500/10">
                            <div class="space-y-2 py-6">
                                <a href="/salles/univ/ceri" class="block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50">Ceri</a>
                                <a href="/salles/univ/agroscience" class="block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50">Agroscience</a>
                                <a href="/salles/univ/avignon-centre" class="block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50">Avignon-Centre</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <main>
            <div class="mx-auto max-w-4xl px-4 py-6 sm:px-6 lg:px-8">
                <div class="relative inline-block text-left w-full">
                    <div class="grid grid-cols-5 gap-4">
                        <div class="col-span-3 relative">
                            <button type="button"
                                class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                                id="menu-button" aria-expanded="true" aria-haspopup="true">
                                SÃ©lectionner Date et Heure
                                <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                    fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd"
                                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                        clip-rule="evenodd" />
                                </svg>
                            </button>

                            <div id="menu"
                                class="absolute mt-2 w-full rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none hidden"
                                role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                                <div class="py-1" role="none">
                                    <form id="dateTimeForm" class="px-4 py-3" role="none">
                                        <div class="mb-4">
                                            <label for="date"
                                                class="block text-sm font-medium text-gray-700">Date</label>
                                            <input type="date" id="date" name="date"
                                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                        </div>
                                        <div class="mb-4">
                                            <label for="time"
                                                class="block text-sm font-medium text-gray-700">Heure</label>
                                            <input type="time" id="time" name="time"
                                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                        </div>
                                        <div>
                                            <button type="submit" id="searchButton"
                                                class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Rechercher</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-span-2">
                            <button type="button"
                                class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-indigo-600 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                                onclick="window.location.href = `/salles/univ/<%= univ %>`;">
                                Heure actuelle
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Tableau des salles libres -->
                <div class="container mx-auto mt-6 max-w-4xl">
                    <h1 class="text-2xl font-bold mb-4">Salles Libres</h1>
                    <table id="freeRoomsTable" class="min-w-full bg-white shadow-md rounded-lg overflow-hidden">
                        <thead class="bg-gray-50 shadow-sm">
                            <tr>
                                <th
                                    class="text-center px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Salle</th>
                                <th
                                    class="text-center px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Prochain cours</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% for (const room in freeRooms) { %>
                                <tr>
                                    <td class="px-4 py-4 whitespace-nowrap text-center">
                                        <%= room %>
                                    </td>
                                    <td class="px-4 py-4 whitespace-nowrap text-center">
                                        <%= freeRooms[room].nextCourse ? new
                                            Date(toDate(freeRooms[room].nextCourse.dtstart)).toLocaleTimeString('fr-FR',
                                            { hour: '2-digit' , minute: '2-digit' , hour12: false })
                                            : 'Aucun cours prÃ©vu' %>
                                    </td>
                                </tr>
                                <% } %>
                        </tbody>
                    </table>
                </div>
                <div class="container mx-auto mt-8 max-w-4xl">
                    <h1 class="text-2xl font-bold mb-4">Salles OccupÃ©es</h1>
                    <table id="usedRoomsTable" class="min-w-full bg-white shadow-md rounded-lg overflow-hidden">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider">Salle
                                </th>
                                <th class="px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider">Sera
                                    Libre</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% for (const room in usedRooms) { %>
                                <tr>
                                    <td class="px-4 py-4 whitespace-nowrap text-center">
                                        <%= room %>
                                    </td>
                                    <td class="px-4< py-4 whitespace-nowrap text-center">
                                        <%= usedRooms[room].courses.willBeFree ? new
                                            Date(usedRooms[room].courses.willBeFree).toLocaleTimeString('fr-FR', {
                                            hour: '2-digit' , minute: '2-digit' , hour12: false })
                                            : 'Aucune information' %>
                                    </td>
                                </tr>
                                <% } %>
                        </tbody>
                    </table>
                </div>
                <% if (Object.keys(invalidRooms).length> 0) { %>
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mt-4"
                        role="alert">
                        <strong class="font-bold">Erreur:</strong>
                        <span class="block sm:inline">Les salles suivantes ont des liens invalides:</span>
                        <ul class="list-disc list-inside">
                            <% for (const room in invalidRooms) { %>
                                <li>
                                    <%= room %>
                                </li>
                                <% } %>
                        </ul>
                    </div>
                    <% } %>
                        <p class="mt-2 text-base text-gray-600 mt-6">
                            <strong>Vous avez besoin d'une salle pour travailler ?</strong> <br>
                            Utilisez cette page pour trouver des salles libres et savoir quand elles seront disponibles.
                            <br>
                            SÃ©lectionnez une date et une heure pour voir les salles disponibles Ã  ce moment-lÃ .
                        </p>
            </div>

        </main>
        <footer class="bg-white shadow mt-8">
            <div class="mx-auto max-w-4xl px-4 py-6 sm:px-6 lg:px-8">
                <p class="text-center text-sm text-gray-500">
                    &copy; 2024 tidic.fr/salles. Tous droits rÃ©servÃ©s.
                </p>
            </div>
        </footer>
    </div>
    <script>
        sortByTime();
        sortByTimeDescending();

        function sortByTime() {
            const table = document.getElementById('usedRoomsTable').getElementsByTagName('tbody')[0];
            const rows = Array.from(table.rows);
            rows.sort((a, b) => {
                const timeA = a.cells[1].innerText === 'Aucun cours prÃ©vu' ? '24:00' : a.cells[1].innerText;
                const timeB = b.cells[1].innerText === 'Aucun cours prÃ©vu' ? '24:00' : b.cells[1].innerText;
                return timeA.localeCompare(timeB);
            });

            rows.forEach(row => table.appendChild(row));
        }
        function sortByTimeDescending() {
            const table = document.getElementById('freeRoomsTable').getElementsByTagName('tbody')[0];
            const rows = Array.from(table.rows);

            rows.sort((a, b) => {
                const timeA = a.cells[1].innerText === 'Aucun cours prÃ©vu' ? '24:00' : a.cells[1].innerText;
                const timeB = b.cells[1].innerText === 'Aucun cours prÃ©vu' ? '24:00' : b.cells[1].innerText;

                const dateA = new Date(`1970-01-01T${timeA}:00`);
                const dateB = new Date(`1970-01-01T${timeB}:00`);

                return dateB - dateA;
            });
            rows.forEach(row => table.appendChild(row));
        }
    </script>
</body>

</html>